definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.RoomUserModel:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      expires:
        description: Room    RoomModel `json:"-"`
        type: string
      id:
        type: integer
      roomID:
        description: User    UserModel `json:"-"`
        type: integer
      updatedAt:
        type: string
      userID:
        type: integer
    type: object
  responses.Error400Response:
    properties:
      error: {}
    type: object
  structs.CheckInBody:
    properties:
      roomUid:
        type: string
      userUid:
        type: string
    required:
    - roomUid
    - userUid
    type: object
  structs.ExtendBody:
    properties:
      expires:
        type: string
      userRoomID:
        type: integer
    required:
    - expires
    - userRoomID
    type: object
  structs.RoomUsers:
    properties:
      roomID:
        type: integer
      roomUid:
        type: string
      users:
        items:
          $ref: '#/definitions/structs.UserInRoom'
        type: array
    required:
    - roomID
    - roomUid
    - users
    type: object
  structs.UserInRoom:
    properties:
      created_at:
        type: string
      expires:
        type: string
      id:
        type: integer
      userID:
        type: integer
      userName:
        type: string
      userUid:
        type: string
    required:
    - created_at
    - expires
    - id
    - userID
    - userName
    - userUid
    type: object
info:
  contact:
    email: mzinyoni7
    name: Mike Zinyoni
  description: W2W-GO
  title: W2W-GO
  version: "0.1"
paths:
  /api/v1:
    get:
      description: Gets Index
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Index
      tags:
      - Index
  /api/v1/rooms/check-in:
    post:
      description: Enter room
      parameters:
      - description: CheckIn JSON
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/structs.CheckInBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RoomUserModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error400Response'
      summary: Check In
      tags:
      - rooms
  /api/v1/rooms/extend:
    patch:
      description: Update users stay in room
      parameters:
      - description: CheckIn JSON
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/structs.ExtendBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RoomUserModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error400Response'
      summary: Extend
      tags:
      - rooms
  /api/v1/rooms/rooms-users:
    get:
      description: Get rooms and users in them
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.RoomUsers'
            type: array
      summary: Rooms Users
      tags:
      - rooms
swagger: "2.0"
